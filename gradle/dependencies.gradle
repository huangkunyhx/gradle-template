ext.libraries = [
  commons              : [
    dependencies.create("commons-io:commons-io:$commonsIoVersion") {
      force = true
    },
    dependencies.create("commons-beanutils:commons-beanutils:$commonsBeansVersion") {
      exclude(group: "commons-logging", module: "commons-logging")
      force = true
    },
    dependencies.create("commons-logging:commons-logging:$commonsLoggingVersion") {
      force = true
    },
    dependencies.create("commons-validator:commons-validator:$commonsValidatorVersion") {
      exclude(group: "commons-logging", module: "commons-logging")
      exclude(group: "commons-lang", module: "commons-lang")
      exclude(group: "commons-collections", module: "commons-collections")
      exclude(group: "commons-beanutils", module: "commons-beanutils")
      exclude(group: "commons-digester", module: "commons-digester")
      force = true
    },
    dependencies.create("commons-codec:commons-codec:$commonsCodecVersion") {
      force = true
    },
    dependencies.create("org.apache.commons:commons-lang3:$commonsLangVersion") {
      force = true
    },
    dependencies.create("commons-collections:commons-collections:$commonsCollections3Version") {
      force = true
    },
    dependencies.create("org.apache.commons:commons-collections4:$commonsCollectionsVersion") {
      force = true
    }
  ],
  guava                : [
    dependencies.create("com.google.guava:guava:$guavaVersion") {
      force = true
    },
    dependencies.create("org.reflections:reflections:$reflectionsVersion") {
      exclude(group: "com.google.guava", module: "guava")
      exclude(group: "org.javassist", module: "javassist")
      force = true
    },
    dependencies.create("org.javassist:javassist:$javassistVersion") {
      force = true
    }
  ],
  httpclient           : [
    dependencies.create("org.apache.httpcomponents:httpclient:$httpclientVersion") {
      exclude(group: "commons-codec", module: "commons-codec")
      exclude(group: "org.apache.httpcomponents", module: "httpcore")
      force = true
    },
    dependencies.create("org.apache.httpcomponents:httpcore:$httpCoreVersion") {
      force = true
    }
  ],
  jackson              : [
    dependencies.create("com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion") {
      exclude(group: "com.fasterxml.jackson.core", module: "jackson-annotations")
      force = true
    },
    dependencies.create("com.fasterxml.jackson.datatype:jackson-datatype-guava:$jacksonDatabindVersion") {
      exclude(group: "com.google.guava", module: "guava")
      exclude(group: "com.fasterxml.jackson.core", module: "jackson-annotations")
      force = true
    },
    dependencies.create("com.fasterxml.jackson.core:jackson-annotations:$jacksonDatabindVersion") {
      force = true
    },
    dependencies.create("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonDatabindVersion") {
      exclude(group: "com.fasterxml.jackson.core", module: "jackson-annotations")
      force = true
    },
    dependencies.create("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonDatabindVersion") {
      exclude(group: "org.yaml", module: "snakeyaml")
      exclude(group: "com.fasterxml.jackson.core", module: "jackson-annotations")
      force = true
    }
  ],
  findbugscontrib      : dependencies.create("com.mebigfatguy.fb-contrib:fb-contrib:$findbugsContribVersion"),
  findbugs             : dependencies.create("com.google.code.findbugs:findbugs:$findbugsVersion") {
    force = true
  },
  findbugssec          : dependencies.create("com.h3xstream.findsecbugs:findsecbugs-plugin:$findbugsSecVersion"),
  tests                : [
    dependencies.create("org.mockito:mockito-core:$mockitoVersion") {
      exclude(group: "org.hamcrest", module: "hamcrest-core")
      exclude(group: "org.objenesis", module: "objenesis")
      exclude(group: "net.bytebuddy", module: "byte-buddy")
      force = true
    },
    dependencies.create("junit:junit:$junitVersion") {
      force = true
    },
    dependencies.create("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
      exclude(group: "org.hamcrest", module: "hamcrest-core")
      exclude(group: "org.slf4j", module: "slf4j-api")
      exclude(group: "org.jboss.logging", module: "jboss-logging")
      exclude(group: "org.mockito", module: "mockito-core")
      exclude(group: "com.fasterxml", module: "classmate")
      exclude(group: "net.minidev", module: "json-smart")
      exclude(group: "org.hibernate", module: "hibernate-validator")
      exclude(group: "org.objenesis", module: "objenesis")
      exclude(group: "org.springframework", module: "spring-test")
      exclude(group: "org.springframework", module: "spring-beans")
      exclude(group: "org.springframework", module: "spring-context")
      exclude(group: "org.springframework", module: "spring-context-support")
      exclude(group: "org.springframework", module: "spring-core")
      exclude(group: "org.springframework", module: "spring-web")
      exclude(group: "org.springframework", module: "spring-webmvc")
      exclude(group: "org.skyscreamer", module: "jsonassert")
      exclude(group: "org.ow2.asm", module: "asm")
      force = true
    },
    dependencies.create("org.springframework:spring-test:$springVersion")
  ],
]