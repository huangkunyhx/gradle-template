apply plugin: 'java'
apply plugin: 'application'
apply from: 'gradle/style.gradle'
apply from: 'gradle/maven.gradle'
apply from: 'gradle/tasks.gradle'
//apply plugin: 'org.springframework.boot'
//apply plugin: 'io.spring.dependency-management'

group = 'com.github.kevin'
version = '0.0.1'

description = "SSO Application"

defaultTasks "clean", "build"

sourceCompatibility = 1.8
targetCompatibility = 1.8
buildDir = "target"

ext {
  mavenPublicUrl="http://nexus.5dg.co/repository/maven-public"
}

repositories {
  mavenLocal()
  maven { url mavenPublicUrl }
  mavenCentral()
}

dependencies {
  compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
  compile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
}

configurations {
  compile.exclude group: "log4j", module: "log4j"
}

mainClassName = "com.github.kevin.template.application.Application"

startScripts {
  doLast {
    unixScript.text = unixScript.text.replaceAll(":\\\$APP_HOME/lib/(.*)\n", ":\\\$APP_HOME/lib/\\*\n")
  }
}

sourceSets {
  main {
    java {
      srcDirs "${project.buildDir}/generated-src/main/java", "${project.projectDir}/src/main/java"
    }
  }
}

[compileJava, compileTestJava]*.options*.encoding = "UTF-8"
compileJava {
  options.fork = true

  doLast {
    //  编译时添加参数名
    //  options.compilerArgs = ["-parameters"]

    jar.manifest {
      attributes("Implementation-Title": project.description,
              "Automatic-Module-Name": project.group,
              "Built-By": "Kevin Huang",
              "Created-By": "$gradleVersion",
              "Build-Jdk": "$JdkVersion",
//            "Specification-Version": project.version, // 可以git版本号
              "Implementation-Version": project.version,
              "Implementation-Date": java.time.ZonedDateTime.now())
    }
  }
}

buildscript {
  repositories {
    mavenLocal()
    maven { url mavenPublicUrl }
    mavenCentral()
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    classpath("io.spring.gradle:dependency-management-plugin:$springDependencyManagementVersion")
  }
}