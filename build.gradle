apply from: rootProject.file("gradle/overrides.gradle")
apply from: rootProject.file("gradle/dependencies.gradle")

apply plugin: "java-library"
apply plugin: "idea"
apply plugin: "maven"
apply plugin: "application"
apply plugin: "org.springframework.boot"
apply plugin: "com.gradle.build-scan"

description = "Gradle Template Application"

defaultTasks "clean", "build"

compileJava.options.fork = true
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext {
  buildDate = java.time.ZonedDateTime.now()
  logbackVersion = '1.1.6'
}

repositories {
  mavenLocal()
  maven { url "http://192.168.88.8:8081/nexus/content/repositories/public" }
  mavenCentral()
}

sourceSets {
  main {
    resources {
      srcDirs "${project.buildDir}/generated-src/main/resources", "${project.projectDir}/src/main/resources"
    }
  }
}

dependencies {
  implementation libraries.commons
  implementation libraries.guava
  implementation libraries.httpclient
  implementation libraries.jackson

  compile("ch.qos.logback:logback-classic:$logbackVersion")
  compile("ch.qos.logback:logback-core:$logbackVersion")
  compile("org.springframework.boot:spring-boot-starter") {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'ch.qos.logback', module: 'logback-core'
  }

  testCompile libraries.tests
}

apply from: rootProject.file("gradle/tasks.gradle")
apply from: rootProject.file("gradle/maven.gradle")

apply from: rootProject.file("gradle/checkstyle.gradle")
apply from: rootProject.file("gradle/findbugs.gradle")

jar {
  manifest {
    attributes("Implementation-Title": project.name,
            "Implementation-Vendor": project.group,
            "Created-By": project.group,
            "Specification-Version": project.version, // 可以git版本号
            "Implementation-Version": project.version)
  }
}

mainClassName = "com.unionpaysmart.template.application.Application"

buildScan {
  licenseAgreementUrl = "https://gradle.com/terms-of-service"
  licenseAgree = "yes"
  licenseAgree = "yes"
}

compileJava.doLast {
  jar.manifest {
    attributes("Implementation-Date": buildDate)
  }
}

startScripts {
  doLast {
    unixScript.text = unixScript.text.replaceAll("lib/(.*)\n", "lib/\\*")
  }
}

buildscript {
  repositories {
    mavenLocal()
    maven { url "http://192.168.88.8:8081/nexus/content/groups/public" }
    maven { url "https://maven.eveoh.nl/content/repositories/releases" }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.spring.io/plugins-release" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/snapshot" }
    mavenCentral()
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE"
    classpath "com.gradle:build-scan-plugin:1.0"
  }
}